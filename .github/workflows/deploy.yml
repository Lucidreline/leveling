name: CI / CD

on:
  push:
    branches: [ master ]

jobs:
  build-and-push:
    name: 🏗️ Build & Push multi-arch Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push multi-arch image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            lucidreline/leveling:latest

  deploy:
    name: 🚀 Deploy to k3s via SSH
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: SSH & Deploy
        uses: appleboy/ssh-action@v0.1.10
        env:
          # Create this secret in GitHub; value = base64 -w0 .env.local
          LEVELING_ENV_LOCAL_B64: ${{ secrets.LEVELING_ENV_LOCAL_B64 }}
        with:
          host: ${{ secrets.SSH_HOST }}
          port: 2222
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_DEPLOY_KEY }}
          envs: LEVELING_ENV_LOCAL_B64
          script: |
            set -e
            echo "::group::🚀 Deploying to k3s"
            export KUBECONFIG=~/kubeconfig

            # Recreate env file
            ENV_TMP="$HOME/leveling.env"
            echo "$LEVELING_ENV_LOCAL_B64" | base64 -d > "$ENV_TMP"

            # Create/Update k8s Secret from env file (parses KEY=VAL lines)
            kubectl create secret generic leveling-env \
              --from-env-file="$ENV_TMP" \
              --dry-run=client -o yaml | kubectl apply -f -

            # Apply k8s manifests (they should exist on the server already)
            kubectl apply -f ~/dev/leveling/leveling-deployment.yaml
            kubectl apply -f ~/dev/leveling/leveling-service.yaml
            kubectl apply -f ~/dev/leveling/leveling-ingress.yaml

            # Update image + wait for rollout
            kubectl set image deployment/leveling leveling=lucidreline/leveling:latest
            kubectl rollout status deployment/leveling --timeout=15m

            # Cleanup
            rm -f "$ENV_TMP"
            echo "::endgroup::"
